version: "3"
services:
  zookeeper:
    image: 'bitnami/zookeeper:latest'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: 'bitnami/kafka:latest'
    container_name: 'kafka'
    ports:
      - '9092:9092'
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENERS=PLAINTEXT://0.0.0.0:9092
      - KAFKA_ADVERTISED_HOST_NAME:kafka
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
    depends_on:
      - zookeeper
  postgres:
    image: postgres
    restart: always
    environment: 
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    logging:
      options:
        max-size: 10m
        max-file: "3"
    ports:
      - '5432:5432'
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
        # copy the sql script to create tables
      - ./sql/create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql
        # copy the sql script to create tables
      - ./sql/fill_tables.sql:/docker-entrypoint-initdb.d/fill_tables.sql
      
  # auth:
  #   build:
  #     context: ./auth
  #   ports:
  #     - "3001:3001"
  #   container_name: server1
  #   depends_on:
  #     - nginx
  #     - postgres
  #     - kafka
      
  # email:
  #   build:
  #     context: ./email
  #   ports:
  #     - "3002:3002"
  #   container_name: server2
  #   depends_on:
  #     - nginx
  #     - postgres
  #     - kafka
  #     - server1

  # nginx:
  #   restart: always
  #   image: nginx:latest
  #   container_name: nginx
  #   volumes:
  #     - "./nginx/nginx.conf:/etc/nginx/conf.d/default.conf"
  #   ports:
  #     - "8080:80"
  #   depends_on:
  #     - postgres